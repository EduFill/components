/* Auto-generated by genmsg_cpp for file /home/nemogiftsun/youBot/edufill_public/components/edufill_sw/edufill_common/edufill_srvs/srv/GetDominantPlane.srv */
#ifndef EDUFILL_SRVS_SERVICE_GETDOMINANTPLANE_H
#define EDUFILL_SRVS_SERVICE_GETDOMINANTPLANE_H
#include <string>
#include <vector>
#include <map>
#include <ostream>
#include "ros/serialization.h"
#include "ros/builtin_message_traits.h"
#include "ros/message_operations.h"
#include "ros/time.h"

#include "ros/macros.h"

#include "ros/assert.h"

#include "ros/service_traits.h"



#include "geometry_msgs/Point32.h"

namespace edufill_srvs
{
template <class ContainerAllocator>
struct GetDominantPlaneRequest_ {
  typedef GetDominantPlaneRequest_<ContainerAllocator> Type;

  GetDominantPlaneRequest_()
  {
  }

  GetDominantPlaneRequest_(const ContainerAllocator& _alloc)
  {
  }


  typedef boost::shared_ptr< ::edufill_srvs::GetDominantPlaneRequest_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::edufill_srvs::GetDominantPlaneRequest_<ContainerAllocator>  const> ConstPtr;
  boost::shared_ptr<std::map<std::string, std::string> > __connection_header;
}; // struct GetDominantPlaneRequest
typedef  ::edufill_srvs::GetDominantPlaneRequest_<std::allocator<void> > GetDominantPlaneRequest;

typedef boost::shared_ptr< ::edufill_srvs::GetDominantPlaneRequest> GetDominantPlaneRequestPtr;
typedef boost::shared_ptr< ::edufill_srvs::GetDominantPlaneRequest const> GetDominantPlaneRequestConstPtr;


template <class ContainerAllocator>
struct GetDominantPlaneResponse_ {
  typedef GetDominantPlaneResponse_<ContainerAllocator> Type;

  GetDominantPlaneResponse_()
  : stamp()
  , coefficients()
  , contour()
  {
    coefficients.assign(0.0);
  }

  GetDominantPlaneResponse_(const ContainerAllocator& _alloc)
  : stamp()
  , coefficients()
  , contour(_alloc)
  {
    coefficients.assign(0.0);
  }

  typedef ros::Time _stamp_type;
  ros::Time stamp;

  typedef boost::array<float, 4>  _coefficients_type;
  boost::array<float, 4>  coefficients;

  typedef std::vector< ::geometry_msgs::Point32_<ContainerAllocator> , typename ContainerAllocator::template rebind< ::geometry_msgs::Point32_<ContainerAllocator> >::other >  _contour_type;
  std::vector< ::geometry_msgs::Point32_<ContainerAllocator> , typename ContainerAllocator::template rebind< ::geometry_msgs::Point32_<ContainerAllocator> >::other >  contour;


  typedef boost::shared_ptr< ::edufill_srvs::GetDominantPlaneResponse_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::edufill_srvs::GetDominantPlaneResponse_<ContainerAllocator>  const> ConstPtr;
  boost::shared_ptr<std::map<std::string, std::string> > __connection_header;
}; // struct GetDominantPlaneResponse
typedef  ::edufill_srvs::GetDominantPlaneResponse_<std::allocator<void> > GetDominantPlaneResponse;

typedef boost::shared_ptr< ::edufill_srvs::GetDominantPlaneResponse> GetDominantPlaneResponsePtr;
typedef boost::shared_ptr< ::edufill_srvs::GetDominantPlaneResponse const> GetDominantPlaneResponseConstPtr;

struct GetDominantPlane
{

typedef GetDominantPlaneRequest Request;
typedef GetDominantPlaneResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;
}; // struct GetDominantPlane
} // namespace edufill_srvs

namespace ros
{
namespace message_traits
{
template<class ContainerAllocator> struct IsMessage< ::edufill_srvs::GetDominantPlaneRequest_<ContainerAllocator> > : public TrueType {};
template<class ContainerAllocator> struct IsMessage< ::edufill_srvs::GetDominantPlaneRequest_<ContainerAllocator>  const> : public TrueType {};
template<class ContainerAllocator>
struct MD5Sum< ::edufill_srvs::GetDominantPlaneRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "d41d8cd98f00b204e9800998ecf8427e";
  }

  static const char* value(const  ::edufill_srvs::GetDominantPlaneRequest_<ContainerAllocator> &) { return value(); } 
  static const uint64_t static_value1 = 0xd41d8cd98f00b204ULL;
  static const uint64_t static_value2 = 0xe9800998ecf8427eULL;
};

template<class ContainerAllocator>
struct DataType< ::edufill_srvs::GetDominantPlaneRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "edufill_srvs/GetDominantPlaneRequest";
  }

  static const char* value(const  ::edufill_srvs::GetDominantPlaneRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct Definition< ::edufill_srvs::GetDominantPlaneRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "\n\
";
  }

  static const char* value(const  ::edufill_srvs::GetDominantPlaneRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator> struct IsFixedSize< ::edufill_srvs::GetDominantPlaneRequest_<ContainerAllocator> > : public TrueType {};
} // namespace message_traits
} // namespace ros


namespace ros
{
namespace message_traits
{
template<class ContainerAllocator> struct IsMessage< ::edufill_srvs::GetDominantPlaneResponse_<ContainerAllocator> > : public TrueType {};
template<class ContainerAllocator> struct IsMessage< ::edufill_srvs::GetDominantPlaneResponse_<ContainerAllocator>  const> : public TrueType {};
template<class ContainerAllocator>
struct MD5Sum< ::edufill_srvs::GetDominantPlaneResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "2ae62413083f6a5601988ea95374f5d8";
  }

  static const char* value(const  ::edufill_srvs::GetDominantPlaneResponse_<ContainerAllocator> &) { return value(); } 
  static const uint64_t static_value1 = 0x2ae62413083f6a56ULL;
  static const uint64_t static_value2 = 0x01988ea95374f5d8ULL;
};

template<class ContainerAllocator>
struct DataType< ::edufill_srvs::GetDominantPlaneResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "edufill_srvs/GetDominantPlaneResponse";
  }

  static const char* value(const  ::edufill_srvs::GetDominantPlaneResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct Definition< ::edufill_srvs::GetDominantPlaneResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "\n\
time stamp\n\
\n\
float32[4] coefficients\n\
\n\
geometry_msgs/Point32[] contour\n\
\n\
\n\
================================================================================\n\
MSG: geometry_msgs/Point32\n\
# This contains the position of a point in free space(with 32 bits of precision).\n\
# It is recommeded to use Point wherever possible instead of Point32.  \n\
# \n\
# This recommendation is to promote interoperability.  \n\
#\n\
# This message is designed to take up less space when sending\n\
# lots of points at once, as in the case of a PointCloud.  \n\
\n\
float32 x\n\
float32 y\n\
float32 z\n\
";
  }

  static const char* value(const  ::edufill_srvs::GetDominantPlaneResponse_<ContainerAllocator> &) { return value(); } 
};

} // namespace message_traits
} // namespace ros

namespace ros
{
namespace serialization
{

template<class ContainerAllocator> struct Serializer< ::edufill_srvs::GetDominantPlaneRequest_<ContainerAllocator> >
{
  template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
  {
  }

  ROS_DECLARE_ALLINONE_SERIALIZER;
}; // struct GetDominantPlaneRequest_
} // namespace serialization
} // namespace ros


namespace ros
{
namespace serialization
{

template<class ContainerAllocator> struct Serializer< ::edufill_srvs::GetDominantPlaneResponse_<ContainerAllocator> >
{
  template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
  {
    stream.next(m.stamp);
    stream.next(m.coefficients);
    stream.next(m.contour);
  }

  ROS_DECLARE_ALLINONE_SERIALIZER;
}; // struct GetDominantPlaneResponse_
} // namespace serialization
} // namespace ros

namespace ros
{
namespace service_traits
{
template<>
struct MD5Sum<edufill_srvs::GetDominantPlane> {
  static const char* value() 
  {
    return "2ae62413083f6a5601988ea95374f5d8";
  }

  static const char* value(const edufill_srvs::GetDominantPlane&) { return value(); } 
};

template<>
struct DataType<edufill_srvs::GetDominantPlane> {
  static const char* value() 
  {
    return "edufill_srvs/GetDominantPlane";
  }

  static const char* value(const edufill_srvs::GetDominantPlane&) { return value(); } 
};

template<class ContainerAllocator>
struct MD5Sum<edufill_srvs::GetDominantPlaneRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "2ae62413083f6a5601988ea95374f5d8";
  }

  static const char* value(const edufill_srvs::GetDominantPlaneRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct DataType<edufill_srvs::GetDominantPlaneRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "edufill_srvs/GetDominantPlane";
  }

  static const char* value(const edufill_srvs::GetDominantPlaneRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct MD5Sum<edufill_srvs::GetDominantPlaneResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "2ae62413083f6a5601988ea95374f5d8";
  }

  static const char* value(const edufill_srvs::GetDominantPlaneResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct DataType<edufill_srvs::GetDominantPlaneResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "edufill_srvs/GetDominantPlane";
  }

  static const char* value(const edufill_srvs::GetDominantPlaneResponse_<ContainerAllocator> &) { return value(); } 
};

} // namespace service_traits
} // namespace ros

#endif // EDUFILL_SRVS_SERVICE_GETDOMINANTPLANE_H

