/* Auto-generated by genmsg_cpp for file /home/nemogiftsun/youBot/edufill_public/components/edufill_sw/edufill_common/edufill_srvs/srv/SetVelocity.srv */
#ifndef EDUFILL_SRVS_SERVICE_SETVELOCITY_H
#define EDUFILL_SRVS_SERVICE_SETVELOCITY_H
#include <string>
#include <vector>
#include <map>
#include <ostream>
#include "ros/serialization.h"
#include "ros/builtin_message_traits.h"
#include "ros/message_operations.h"
#include "ros/time.h"

#include "ros/macros.h"

#include "ros/assert.h"

#include "ros/service_traits.h"




namespace edufill_srvs
{
template <class ContainerAllocator>
struct SetVelocityRequest_ {
  typedef SetVelocityRequest_<ContainerAllocator> Type;

  SetVelocityRequest_()
  : base_velocity(0.0)
  {
  }

  SetVelocityRequest_(const ContainerAllocator& _alloc)
  : base_velocity(0.0)
  {
  }

  typedef float _base_velocity_type;
  float base_velocity;


  typedef boost::shared_ptr< ::edufill_srvs::SetVelocityRequest_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::edufill_srvs::SetVelocityRequest_<ContainerAllocator>  const> ConstPtr;
  boost::shared_ptr<std::map<std::string, std::string> > __connection_header;
}; // struct SetVelocityRequest
typedef  ::edufill_srvs::SetVelocityRequest_<std::allocator<void> > SetVelocityRequest;

typedef boost::shared_ptr< ::edufill_srvs::SetVelocityRequest> SetVelocityRequestPtr;
typedef boost::shared_ptr< ::edufill_srvs::SetVelocityRequest const> SetVelocityRequestConstPtr;


template <class ContainerAllocator>
struct SetVelocityResponse_ {
  typedef SetVelocityResponse_<ContainerAllocator> Type;

  SetVelocityResponse_()
  {
  }

  SetVelocityResponse_(const ContainerAllocator& _alloc)
  {
  }


  typedef boost::shared_ptr< ::edufill_srvs::SetVelocityResponse_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::edufill_srvs::SetVelocityResponse_<ContainerAllocator>  const> ConstPtr;
  boost::shared_ptr<std::map<std::string, std::string> > __connection_header;
}; // struct SetVelocityResponse
typedef  ::edufill_srvs::SetVelocityResponse_<std::allocator<void> > SetVelocityResponse;

typedef boost::shared_ptr< ::edufill_srvs::SetVelocityResponse> SetVelocityResponsePtr;
typedef boost::shared_ptr< ::edufill_srvs::SetVelocityResponse const> SetVelocityResponseConstPtr;

struct SetVelocity
{

typedef SetVelocityRequest Request;
typedef SetVelocityResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;
}; // struct SetVelocity
} // namespace edufill_srvs

namespace ros
{
namespace message_traits
{
template<class ContainerAllocator> struct IsMessage< ::edufill_srvs::SetVelocityRequest_<ContainerAllocator> > : public TrueType {};
template<class ContainerAllocator> struct IsMessage< ::edufill_srvs::SetVelocityRequest_<ContainerAllocator>  const> : public TrueType {};
template<class ContainerAllocator>
struct MD5Sum< ::edufill_srvs::SetVelocityRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "f2d1b61270cfc048a6d3889191a55b63";
  }

  static const char* value(const  ::edufill_srvs::SetVelocityRequest_<ContainerAllocator> &) { return value(); } 
  static const uint64_t static_value1 = 0xf2d1b61270cfc048ULL;
  static const uint64_t static_value2 = 0xa6d3889191a55b63ULL;
};

template<class ContainerAllocator>
struct DataType< ::edufill_srvs::SetVelocityRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "edufill_srvs/SetVelocityRequest";
  }

  static const char* value(const  ::edufill_srvs::SetVelocityRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct Definition< ::edufill_srvs::SetVelocityRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "float32 base_velocity\n\
\n\
";
  }

  static const char* value(const  ::edufill_srvs::SetVelocityRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator> struct IsFixedSize< ::edufill_srvs::SetVelocityRequest_<ContainerAllocator> > : public TrueType {};
} // namespace message_traits
} // namespace ros


namespace ros
{
namespace message_traits
{
template<class ContainerAllocator> struct IsMessage< ::edufill_srvs::SetVelocityResponse_<ContainerAllocator> > : public TrueType {};
template<class ContainerAllocator> struct IsMessage< ::edufill_srvs::SetVelocityResponse_<ContainerAllocator>  const> : public TrueType {};
template<class ContainerAllocator>
struct MD5Sum< ::edufill_srvs::SetVelocityResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "d41d8cd98f00b204e9800998ecf8427e";
  }

  static const char* value(const  ::edufill_srvs::SetVelocityResponse_<ContainerAllocator> &) { return value(); } 
  static const uint64_t static_value1 = 0xd41d8cd98f00b204ULL;
  static const uint64_t static_value2 = 0xe9800998ecf8427eULL;
};

template<class ContainerAllocator>
struct DataType< ::edufill_srvs::SetVelocityResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "edufill_srvs/SetVelocityResponse";
  }

  static const char* value(const  ::edufill_srvs::SetVelocityResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct Definition< ::edufill_srvs::SetVelocityResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "\n\
\n\
\n\
";
  }

  static const char* value(const  ::edufill_srvs::SetVelocityResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator> struct IsFixedSize< ::edufill_srvs::SetVelocityResponse_<ContainerAllocator> > : public TrueType {};
} // namespace message_traits
} // namespace ros

namespace ros
{
namespace serialization
{

template<class ContainerAllocator> struct Serializer< ::edufill_srvs::SetVelocityRequest_<ContainerAllocator> >
{
  template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
  {
    stream.next(m.base_velocity);
  }

  ROS_DECLARE_ALLINONE_SERIALIZER;
}; // struct SetVelocityRequest_
} // namespace serialization
} // namespace ros


namespace ros
{
namespace serialization
{

template<class ContainerAllocator> struct Serializer< ::edufill_srvs::SetVelocityResponse_<ContainerAllocator> >
{
  template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
  {
  }

  ROS_DECLARE_ALLINONE_SERIALIZER;
}; // struct SetVelocityResponse_
} // namespace serialization
} // namespace ros

namespace ros
{
namespace service_traits
{
template<>
struct MD5Sum<edufill_srvs::SetVelocity> {
  static const char* value() 
  {
    return "f2d1b61270cfc048a6d3889191a55b63";
  }

  static const char* value(const edufill_srvs::SetVelocity&) { return value(); } 
};

template<>
struct DataType<edufill_srvs::SetVelocity> {
  static const char* value() 
  {
    return "edufill_srvs/SetVelocity";
  }

  static const char* value(const edufill_srvs::SetVelocity&) { return value(); } 
};

template<class ContainerAllocator>
struct MD5Sum<edufill_srvs::SetVelocityRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "f2d1b61270cfc048a6d3889191a55b63";
  }

  static const char* value(const edufill_srvs::SetVelocityRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct DataType<edufill_srvs::SetVelocityRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "edufill_srvs/SetVelocity";
  }

  static const char* value(const edufill_srvs::SetVelocityRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct MD5Sum<edufill_srvs::SetVelocityResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "f2d1b61270cfc048a6d3889191a55b63";
  }

  static const char* value(const edufill_srvs::SetVelocityResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct DataType<edufill_srvs::SetVelocityResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "edufill_srvs/SetVelocity";
  }

  static const char* value(const edufill_srvs::SetVelocityResponse_<ContainerAllocator> &) { return value(); } 
};

} // namespace service_traits
} // namespace ros

#endif // EDUFILL_SRVS_SERVICE_SETVELOCITY_H

