<?xml version="1.0"?>
<launch>
    <env name="ROS_HOME" value="$(find edufill_object_detection)"/>
    <arg name="launch_openni" default="false" />
    <arg name="default_hsv_file" default="true" />
    <arg name="use_image" default="false" />
    <arg name="image_file" default="image.png" />
    <param name="~rgb_only_camera" value="true"/>
    <group if="$(arg use_image)">
        <param name="~/image_file" value="$(arg image_file)"/>
    </group>
    <group if="$(arg launch_openni)">
        <include file="$(find simple_pcl)/launch/openni.launch" />
    </group>
    <group if="$(arg default_hsv_file)">
            <rosparam command="load" file="$(find edufill_object_detection)/params/def_min_max_hsv.yaml" />
    </group>
    <group unless="$(arg default_hsv_file)">
            <rosparam command="load" file="$(find edufill_object_detection)/params/cur_min_max_hsv.yaml" />
    </group>
    <node pkg="edufill_object_detection" type="cube_color_detector.py" name="cube_color_detector" output="screen">
            <rosparam command="load" file="$(find edufill_object_detection)/params/params.yaml" />
            <!--remap from="/tower_cam3d/depth_registered/points" to="/camera/depth_registered/points"/-->
            <!--remap from="/tower_cam3d/rgb/image_color" to="/camera/rgb/image_rect_color" /-->
    </node>
</launch>
